Running stats query with map-reduce: Objectmap: "function (doc) {\n        // This will be replaced with actual filters data\n        const filters = '[]';\n        const targetField = '\"coucou\"';\n        \n        for (const filter of filters) {\n          if (!filter.enabled || !filter.field) continue;\n          \n          const docValue = doc[filter.field];\n          const filterValue = filter.value;\n          const operator = filter.operator || 'equals';\n          \n          switch (operator) {\n            case 'equals':\n              if (docValue != filterValue) return;\n              break;\n            case 'not_equals':\n              if (docValue == filterValue) return;\n              break;\n            case 'contains':\n              if (!String(docValue || '').toLowerCase().includes(String(filterValue || '').toLowerCase())) return;\n              break;\n            case 'greater_than':\n              if (parseFloat(docValue) <= parseFloat(filterValue)) return;\n              break;\n            case 'less_than':\n              if (parseFloat(docValue) >= parseFloat(filterValue)) return;\n              break;\n            case 'exists':\n              if (docValue === null || docValue === undefined) return;\n              break;\n            case 'not_exists':\n              if (docValue !== null && docValue !== undefined) return;\n              break;\n          }\n        }\n        \n        // Emit the numeric value for stats calculation\n        const value = doc[targetField];\n        if (value !== null && value !== undefined && !isNaN(parseFloat(value))) {\n          emit(doc._id, parseFloat(value));\n        }\n      }"reduce: "_stats"[[Prototype]]: Objectconstructor: ƒ Object()hasOwnProperty: ƒ hasOwnProperty()isPrototypeOf: ƒ isPrototypeOf()propertyIsEnumerable: ƒ propertyIsEnumerable()toLocaleString: ƒ toLocaleString()toString: ƒ toString()valueOf: ƒ valueOf()__defineGetter__: ƒ __defineGetter__()__defineSetter__: ƒ __defineSetter__()__lookupGetter__: ƒ __lookupGetter__()__lookupSetter__: ƒ __lookupSetter__()__proto__: (...)get __proto__: ƒ __proto__()set __proto__: ƒ __proto__()
VM31889:103 Stats result: Objectrows: Array(0)length: 0[[Prototype]]: Array(0)[[Prototype]]: Object